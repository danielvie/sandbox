{"version":3,"file":"content.js","mappings":";;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB;;;;;;;UCzBzB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA,gCAAgC,YAAY;AAC5C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ,0CAAM,+BAA+B;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C;AACA;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK,WAAW,MAAM;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,KAAK,KAAK,IAAI;AACpD;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,IAAI;AACnC,qCAAqC,QAAQ,0CAAM,mBAAmB;AACtE;AACA;AACA,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf;AACA,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf,SAAS,0CAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,KAAK,OAAO,sBAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,8CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,2CAA2C,YAAY;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL","sources":["webpack://empty-project/./src/types.ts","webpack://empty-project/webpack/bootstrap","webpack://empty-project/webpack/runtime/define property getters","webpack://empty-project/webpack/runtime/hasOwnProperty shorthand","webpack://empty-project/webpack/runtime/make namespace object","webpack://empty-project/./src/content.ts"],"sourcesContent":["export var ACTION;\n(function (ACTION) {\n    ACTION[ACTION[\"ADAPTERS\"] = 0] = \"ADAPTERS\";\n    ACTION[ACTION[\"ADDHOUR\"] = 1] = \"ADDHOUR\";\n    ACTION[ACTION[\"ADDHOUR2\"] = 2] = \"ADDHOUR2\";\n    ACTION[ACTION[\"CLEAN_NOTMASTER\"] = 3] = \"CLEAN_NOTMASTER\";\n    ACTION[ACTION[\"CLEAN_TESTS\"] = 4] = \"CLEAN_TESTS\";\n    ACTION[ACTION[\"CLEAN_WARNS\"] = 5] = \"CLEAN_WARNS\";\n    ACTION[ACTION[\"CLEAR_FILTER\"] = 6] = \"CLEAR_FILTER\";\n    ACTION[ACTION[\"DEL_SECTION_NOTES\"] = 7] = \"DEL_SECTION_NOTES\";\n    ACTION[ACTION[\"MAX_SV\"] = 8] = \"MAX_SV\";\n    ACTION[ACTION[\"FILTER_BY_CHANNEL\"] = 9] = \"FILTER_BY_CHANNEL\";\n    ACTION[ACTION[\"FILTER_BY_LABEL\"] = 10] = \"FILTER_BY_LABEL\";\n    ACTION[ACTION[\"FILTER_BY_NOTE\"] = 11] = \"FILTER_BY_NOTE\";\n    ACTION[ACTION[\"FILTER_BY_PARAM\"] = 12] = \"FILTER_BY_PARAM\";\n    ACTION[ACTION[\"FILTER_BY_RANGE\"] = 13] = \"FILTER_BY_RANGE\";\n    ACTION[ACTION[\"GET_MOUSE\"] = 14] = \"GET_MOUSE\";\n    ACTION[ACTION[\"GOTOOPT\"] = 15] = \"GOTOOPT\";\n    ACTION[ACTION[\"PAGE_CHANGED\"] = 16] = \"PAGE_CHANGED\";\n    ACTION[ACTION[\"PLAY\"] = 17] = \"PLAY\";\n    ACTION[ACTION[\"SELECT_ADAPTER\"] = 18] = \"SELECT_ADAPTER\";\n    ACTION[ACTION[\"SET_VM\"] = 19] = \"SET_VM\";\n    ACTION[ACTION[\"SET_VM_OLD\"] = 20] = \"SET_VM_OLD\";\n    ACTION[ACTION[\"SUBHOUR\"] = 21] = \"SUBHOUR\";\n    ACTION[ACTION[\"SUBHOUR2\"] = 22] = \"SUBHOUR2\";\n})(ACTION || (ACTION = {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ACTION } from \"./types\";\nconst config_vm_optics = {\n    SMOKE_COMMENT: \"xl mode axini[mbt]\",\n    PROJECT_BUILD_XML_PATH: \"\\\\\\\\ach-ha-server\\\\HoldingArea\\\\ProjectBuildsFDT\\\\TEM\\\\TEM_ISO\\\\tem_platform_iso\\\\product\\\\project.build.xml\",\n    MAIN_COMPONENT: \"TEM_ISO\",\n    PRODUCT: \"Titan\",\n    TARGET: \"debug\",\n    CPU: \"x86\",\n    CONFIGS: \"Juelich_TOMO\",\n    PLATFORM: \"win10\",\n    CLEAN_VM: \"No\",\n    EXPORT_VM: \"No\",\n    FINAL_EXPORT_FOLDER: \"\\\\\\\\ach-smoketests\\\\SmokeTest-TEM\\\\ExportedVMs\",\n    USE_TEST_EXECUTOR: \"No\",\n};\nconst config_vm_optics_old = {\n    SMOKE_COMMENT: \"xl mode axini[mbt] 7.17.x\",\n    PROJECT_BUILD_XML_PATH: \"\\\\\\\\ach-ha-server\\\\HoldingArea\\\\ProjectBuildsFDT\\\\TEM\\\\TEM_ISO\\\\tem_7.17.x_iso\\\\product\\\\project.build.xml\",\n    MAIN_COMPONENT: \"TEM_ISO\",\n    PRODUCT: \"Titan\",\n    TARGET: \"debug\",\n    CPU: \"x86\",\n    CONFIGS: \"Juelich_TOMO\",\n    PLATFORM: \"win10\",\n    CLEAN_VM: \"No\",\n    EXPORT_VM: \"No\",\n    FINAL_EXPORT_FOLDER: \"\\\\\\\\ach-smoketests\\\\SmokeTest-TEM\\\\ExportedVMs\",\n    USE_TEST_EXECUTOR: \"No\",\n};\nconst GetInputs = () => {\n    return document.querySelectorAll(\".input-group\");\n};\nconst SetLogHour = (offset_minutes) => {\n    // get all timestamp elements\n    const elements = document.querySelectorAll(\"#test-case-table td\");\n    const patt = /^\\d+:\\d+:[\\d.]+$/;\n    elements.forEach((el) => {\n        const t = el.innerHTML.split(\"\\n\").join(\"\");\n        if (t.match(patt)) {\n            const _time = new Date(`1970-01-01T${t}Z`);\n            _time.setMinutes(_time.getMinutes() + offset_minutes);\n            const updatedTime = _time.toISOString().match(/\\d+:\\d+:[\\d.]+/)[0];\n            el.innerHTML = `\\n${updatedTime}\\n`;\n        }\n    });\n};\nconst CleanTestSets = () => {\n    document.querySelectorAll(\".text-struckthrough\").forEach((el) => el.remove());\n};\nconst CleanTestNotMaster = () => {\n    document.querySelectorAll(\".table tbody tr\").forEach((e) => {\n        if (!e.children[0].innerText.includes(\"master\"))\n            e.remove();\n    });\n};\nconst CleanDangerMessages = () => {\n    const formDanger = document.querySelectorAll(\".form-text.text-danger\");\n    if (formDanger)\n        formDanger.forEach((el) => (el.innerHTML = \"\"));\n    const alertDanger = document.querySelectorAll(\".alert.alert-danger\");\n    if (alertDanger)\n        alertDanger.forEach((el) => el.remove());\n};\nconst CleanMonitor = () => {\n    console.log(\"[in] clean monitor\");\n    const el = document.querySelectorAll(\".form-text.text-danger\");\n    const url = document.URL;\n    if (!url.includes(\"configure_channel_mapping\")) {\n        return false;\n    }\n    if (el.length > 0) {\n        CleanDangerMessages();\n        return true;\n    }\n    setTimeout(() => {\n        CleanMonitor();\n    }, 10);\n};\nfunction GetAvailableAdapters() {\n    console.log(\"GetAvailableAdapters\");\n    // finding section with adapter names\n    const selects = document.querySelectorAll(\"select\");\n    // getting elements in `bold`\n    let listAdapters = [];\n    selects[0].querySelectorAll(\"option\").forEach((o) => {\n        listAdapters.push(o.textContent.replace(/\\(compatible\\)$/, \"\"));\n    });\n    console.log(listAdapters);\n    return listAdapters;\n}\nchrome.runtime.onMessage.addListener((request, _sender, _response) => {\n    const fun_Adapters = () => {\n        const adapters = GetAvailableAdapters();\n        chrome.runtime.sendMessage({ action: ACTION.ADAPTERS, adapters: adapters });\n    };\n    const fun_Clean_tests = () => {\n        CleanTestSets();\n    };\n    const fun_Select_adapter = () => {\n        // cleanning danger messages\n        CleanTestSets();\n        SetAdapter(request.adapterName);\n    };\n    const fun_Page_changed = () => {\n        // console.log('page changed')\n    };\n    const fun_Play = () => {\n        console.log(\"[in] play\");\n    };\n    const _filter = (elements, value) => {\n        // getting elements that are a match with the regex and are not hidden\n        const re = new RegExp(value);\n        const listOK = [];\n        for (let index = 0; index < elements.length; index++) {\n            const el = elements[index];\n            const parent = el.closest(\".step-row\");\n            if (el.innerText.match(re) && !parent.classList.contains(\"hidden\")) {\n                listOK.push(parent);\n            }\n        }\n        // add hidden to all elements\n        document\n            .querySelectorAll(\"tbody .step-row\")\n            .forEach((e) => e.classList.add(\"hidden\"));\n        // display only selected elements\n        for (let index = 0; index < listOK.length; index++) {\n            const element = listOK[index];\n            element.classList.remove(\"hidden\");\n        }\n    };\n    const fun_FilterByChannel = (channel) => {\n        console.log(`FilterByChannel: \\`/${channel}/\\``);\n        _filter(document.querySelectorAll(\"tbody .channel\"), channel);\n    };\n    const fun_FilterByNote = (note) => {\n        console.log(`FilterByNote: \\`/${note}/\\``);\n        _filter(document.querySelectorAll(\"tbody .note\"), note);\n    };\n    const fun_FilterByLabel = (label) => {\n        console.log(`FilterByLabel: \\`/${label}/\\``);\n        _filter(document.querySelectorAll(\"tbody .label\"), label);\n    };\n    const fun_FilterByParam = (param) => {\n        if (!param) {\n            return false;\n        }\n        const name = param[\"name\"];\n        const value = param[\"value\"];\n        console.log(`FilterByParam: \\`/${name}/\\` : \\`/${value}/\\``);\n        /* CUSTOM _FILTER FOR PARAM TO MATCH BOTH NAME AND VALUE OF THE ELEMENT */\n        const elements = document.querySelectorAll(\"tbody .parameter\");\n        // getting elements that are a match with the regex and are not hidden\n        const re_name = new RegExp(name);\n        const re_value = new RegExp(value);\n        const listOK = [];\n        for (let index = 0; index < elements.length; index++) {\n            const el_name = elements[index].querySelector(\".name\");\n            const el_value = el_name.parentElement.querySelector(\".value\");\n            const parent = el_name.closest(\".step-row\");\n            if (el_name.innerText.match(re_name) &&\n                el_value.innerText.match(re_value) &&\n                !parent.classList.contains(\"hidden\")) {\n                listOK.push(parent);\n            }\n        }\n        // add hidden to all elements\n        document\n            .querySelectorAll(\"tbody .step-row\")\n            .forEach((e) => e.classList.add(\"hidden\"));\n        // display only selected elements\n        for (let index = 0; index < listOK.length; index++) {\n            const element = listOK[index];\n            element.classList.remove(\"hidden\");\n        }\n    };\n    const fun_FilterByRange = (param) => {\n        if (!param) {\n            return false;\n        }\n        const ini = parseInt(param[\"ini\"]) || 1;\n        const end = parseInt(param[\"end\"]) || 999999;\n        console.log(`FilterByRange: ${ini} :: ${end}`);\n        /* CUSTOM _FILTER FOR PARAM TO MATCH BOTH NAME AND VALUE OF THE ELEMENT */\n        const elements = document.querySelectorAll(\"tbody .step\");\n        // getting elements that are a match with the regex and are not hidden\n        const listOK = [];\n        for (let index = 0; index < elements.length; index++) {\n            const el = elements[index];\n            const line_idx = parseInt(el.innerText);\n            const parent = el.closest(\".step-row\");\n            if (line_idx >= ini &&\n                line_idx <= end &&\n                !parent.classList.contains(\"hidden\")) {\n                listOK.push(parent);\n            }\n        }\n        // add hidden to all elements\n        document\n            .querySelectorAll(\"tbody .step-row\")\n            .forEach((e) => e.classList.add(\"hidden\"));\n        // display only selected elements\n        for (let index = 0; index < listOK.length; index++) {\n            const element = listOK[index];\n            element.classList.remove(\"hidden\");\n        }\n    };\n    const fun_ClearFilter = () => {\n        console.log(\"ClearFilter\");\n        document\n            .querySelectorAll(\"tbody .step-row\")\n            .forEach((e) => e.classList.remove(\"hidden\"));\n    };\n    const fun_DelNotesButton = () => {\n        const notes_button = document.getElementById(\"show-notes-button\");\n        if (notes_button) {\n            notes_button.remove();\n        }\n        const notes = document.getElementById(\"notes\");\n        if (notes) {\n            notes.remove();\n        }\n    };\n    const fun_MinMaxSV = () => {\n        const sv = document.querySelectorAll(\".step-row .state_vectors\");\n        let r = [];\n        sv.forEach((e) => {\n            const ei = parseInt(e.innerText);\n            if (!isNaN(ei)) {\n                r.push(ei);\n            }\n        });\n        r = r.filter((e) => !isNaN(e));\n        const max = Math.max.apply(null, r);\n        console.log(`max sv: ${max}`);\n        chrome.runtime.sendMessage({ action: ACTION.MAX_SV, max: max });\n    };\n    const funmap = {\n        [ACTION.ADAPTERS]: fun_Adapters,\n        [ACTION.CLEAN_TESTS]: fun_Clean_tests,\n        [ACTION.SELECT_ADAPTER]: fun_Select_adapter,\n        [ACTION.PAGE_CHANGED]: fun_Page_changed,\n        // [ACTION.GET_MOUSE]: fun_Get_mouse,\n        [ACTION.SET_VM]: () => SetVM(config_vm_optics),\n        [ACTION.SET_VM_OLD]: () => SetVM(config_vm_optics_old),\n        [ACTION.ADDHOUR]: () => SetLogHour(60),\n        [ACTION.SUBHOUR]: () => SetLogHour(-60),\n        [ACTION.ADDHOUR2]: () => SetLogHour(120),\n        [ACTION.SUBHOUR2]: () => SetLogHour(-120),\n        [ACTION.CLEAN_WARNS]: () => CleanDangerMessages(),\n        [ACTION.CLEAN_NOTMASTER]: () => CleanTestNotMaster(),\n        [ACTION.PLAY]: fun_Play,\n        [ACTION.FILTER_BY_CHANNEL]: () => fun_FilterByChannel(request.channel),\n        [ACTION.FILTER_BY_LABEL]: () => fun_FilterByLabel(request.label),\n        [ACTION.FILTER_BY_NOTE]: () => fun_FilterByNote(request.note),\n        [ACTION.FILTER_BY_PARAM]: () => fun_FilterByParam(request.param),\n        [ACTION.FILTER_BY_RANGE]: fun_FilterByRange(request.range),\n        [ACTION.DEL_SECTION_NOTES]: fun_DelNotesButton,\n        [ACTION.CLEAR_FILTER]: fun_ClearFilter,\n        [ACTION.MAX_SV]: fun_MinMaxSV,\n    };\n    try {\n        funmap[request.action]();\n    }\n    catch (e) {\n        console.log(e);\n        console.log(\"COULD NOT UNDERSTAND THIS ACTION\");\n        console.log(request);\n    }\n});\nchrome.storage.sync.get([\"checkCleanValue\"], (results) => {\n    if (results.checkCleanValue) {\n        CleanMonitor();\n    }\n});\nfunction SetVM(config_vm_optics) {\n    console.log(config_vm_optics);\n    const divs = document\n        .querySelector(\"table.parameters\")\n        .querySelectorAll(\"div\");\n    for (const key in config_vm_optics) {\n        console.log(`set ${key} to: \"${config_vm_optics[key]}\"`);\n        for (const d of divs) {\n            const inputs = d.querySelectorAll(\"input\");\n            const select = d.querySelectorAll(\"select\");\n            if (inputs[0].value == key) {\n                if (select.length > 0) {\n                    for (let o of select[0].querySelectorAll(\"option\")) {\n                        if (o.value === config_vm_optics[key]) {\n                            o.selected = true;\n                        }\n                    }\n                }\n                else {\n                    inputs[1].value = config_vm_optics[key];\n                }\n            }\n        }\n    }\n}\nfunction SetAdapter(adapterName) {\n    const curProj = document\n        .querySelector(\"#current-project\")\n        .textContent.toLowerCase();\n    // uhv specific\n    if (adapterName.includes(\"TFS@UHVLoader\") &&\n        curProj.includes(\"tfs_uhvloader\")) {\n        const _name = adapterName.match(/TFS@UHVLoader.*/)[0];\n        SetUHVLoader(_name);\n        return false;\n    }\n    else if (adapterName.toLowerCase().includes(\"biprism\") &&\n        curProj.includes(\"tfs_optics\")) {\n        SetOptics(adapterName);\n        return false;\n    }\n    // other projects\n    const inputs = GetInputs();\n    inputs.forEach((i) => {\n        let options = i.querySelectorAll(\"option\");\n        options.forEach((o) => {\n            if (o.textContent.replace(\" (compatible)\", \"\") === adapterName) {\n                o.selected = true;\n                return true;\n            }\n        });\n    });\n}\nfunction SetUHVLoader(adapterName) {\n    console.log(`[uhvloader] set adapter to ${adapterName}`);\n    const adapterSufix = adapterName.split(\"@\").pop();\n    const provided = [\n        \"ILoaderControl_V2\",\n        \"IInitialize\",\n        \"IRecovery\",\n        \"ITransfer\",\n        \"IUninitialize\",\n        \"IControl\",\n        \"IAction\",\n    ];\n    const requiredMotion = [\n        \"IMotionFirmwareBase\",\n        \"IMotionFirmwareLoadlock\",\n        \"IMotionFirmwareStorageChamber\",\n        \"IMotionFirmwareOctagon\",\n    ];\n    const requiredVacuum = [\"IValve\", \"IManualValve\", \"IPump\"];\n    const inputs = GetInputs();\n    inputs.forEach((input) => {\n        const label = input.parentElement.querySelector(\"label\").innerText;\n        const conditions = [adapterSufix.toLowerCase()];\n        if (provided.includes(label)) {\n            conditions.push(\"provided\");\n        }\n        else if (requiredMotion.includes(label)) {\n            conditions.push(\"required\");\n            conditions.push(\"motion\");\n        }\n        else if (requiredVacuum.includes(label)) {\n            conditions.push(\"required\");\n            conditions.push(\"vacuum\");\n        }\n        else {\n            conditions.push(\"required\");\n            conditions.push(\"vacuum\");\n            console.log(\"name is not known, setting to `required.vacuum`\");\n        }\n        let options = input.querySelectorAll(\"option\");\n        options.forEach((o) => {\n            const hasAll = conditions.every((c) => o.textContent.toLowerCase().includes(c));\n            if (hasAll) {\n                o.selected = true;\n                return true;\n            }\n        });\n    });\n}\nfunction SetOptics(adapterName) {\n    console.log(`[optics] set adapter to ${adapterName}`);\n    const computerName = adapterName.match(/(?<=@.*-).*/)[0];\n    const provided = [\n        \"IBiprism\",\n        \"IBiprismEvents\",\n        \"IBiprismRotation\",\n        \"IBiprismService\",\n        \"IBiprismVoltage\",\n        \"IBiprisms\",\n    ];\n    const required = [\"IHalSimAdc\", \"ISimRegister\", \"ISimSwitch\"];\n    const inputs = GetInputs();\n    inputs.forEach((input) => {\n        const label = input.parentElement.querySelector(\"label\").innerText;\n        const conditions = [computerName.toLowerCase()];\n        if (provided.includes(label)) {\n            conditions.push(\"axinitester\");\n        }\n        else if (required.includes(label)) {\n            conditions.push(\"required\");\n        }\n        else {\n            conditions.push(\"required\");\n            console.log(\"name is not known, setting to `required`\");\n        }\n        let options = input.querySelectorAll(\"option\");\n        options.forEach((o) => {\n            const hasAll = conditions.every((c) => o.textContent.toLowerCase().includes(c));\n            if (hasAll) {\n                o.selected = true;\n                return true;\n            }\n        });\n    });\n}\n"],"names":[],"sourceRoot":""}