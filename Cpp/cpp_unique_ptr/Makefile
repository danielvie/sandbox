# CONFIGURANDO FLAGS COMPILADOR
CXX           = g++
CC            = gcc

INCLUDE       = -Isrc -Ilib -Iinclude
DECLARE       = 

CFLAGS	      = -O0 -g -Wall ${INCLUDE} ${DECLARE}
CXXFLAGS	  = -O0 -g -std=c++17 -Wall ${INCLUDE} ${DECLARE}
LDFLAGS 	  = 

# DEFININDO NOME LIB 'python' E 'exe'
app           = main

# BREAKLINE CONSTANT
ifeq (${OS},Windows_NT)
break_line = \\\\\\n
else
break_line = \\\\n
endif

# LENDO ARQUIVOS
src           = $(wildcard src/*.c*)
lib           = $(wildcard lib/*.c*)

# AJUSTANDO 'src' E 'obj'
obj           = $(addsuffix .o,$(basename $(src:src/%=obj/%)))
obj          += $(addsuffix .o,$(basename $(lib:lib/%=obj/%)))

# LEIS DE COMPILACAO
all: r

r: run

p: 
	@echo -----------------------------
	@echo ${src}
	@echo -----------------------------
	@echo ${obj}
	@echo -----------------------------

# AJUSTANDO FLAGS 'python'
lib: ${pyd}

# COMPILACAO 'app {exe}'
${app}: ${obj}
	$(CXX) -o ${app} ${obj}

# ESCREVENDO '*.o' EM 'obj'
obj/%.o : src/%.cpp
	$(CXX) ${CXXFLAGS} -o $@ -c $<

obj/%.o : lib/%.cpp
	$(CXX) ${CXXFLAGS} -o $@ -c $<

# MONITORANDO ALTERACOES '.h' IMPORTANTES
# obj/teste.o : src/teste.h

# INICIALIZANDO PASTAS
init: create_folders
init: create_main
init: create_readme

i: init

f: create_folders

m: create_main

re: create_readme

res: reset

.SILENT: create_folders
create_folders:
	mkdir obj src include lib

.SILENT: create_main
create_main:
	printf "#include <iostream>\n\n" > src/main.cpp
	printf "int main(int argc, char const *argv[])\n" >> src/main.cpp
	printf "{\n" >> src/main.cpp
	printf "	std::cout << \"-----------------------------------------${break_line}\";\n" >> src/main.cpp
	printf "	std::cout << \"hello${break_line}\";\n" >> src/main.cpp
	printf "	return 0;\n" >> src/main.cpp
	printf "}" >> src/main.cpp

.SILENT: create_readme
create_readme:
	printf "\n### REF\n" > README.md

# EXECURANDO 'exe'
run: ${app}
	./${app}

# LIMPANDO OBJETOS
clean: 
	rm obj/*

reset:
	rm -rf *